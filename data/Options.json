{
    "Local path": "~/gdrive",
    /* 
The absolute path to a local folder that you would like to sync with google drive. 
You may use "~" to indicate the home folder. 
e.g. ~/gdrive, /home/hello/Documents/mygoogledrive
*/
    "Ask before exit": false,
    /*
If true: 
    If pysync completed successfully, it'll ask you if you want to restart pysync
    If pysync encounters an error, this will display the error and hold the terminal open
If false:
    pysync will exit immediately. This may cause the terminal to instantly close, making error messages 
hard to see.
*/
    "Print commit progress": true,
    /*
If true: 
    pysync will print the names of files that are being committed.
If false: 
    pysync may appear stuck for a long time.
*/
    "Compare all md5sum": false,
    /*
If true:
    pysync will calculate md5sum of all local files and compare them to the remote md5sum.
If false:
    pysync will first compare the modification date. If they do not match, then md5sum is calculated
    and compared.
*/
    "Ask for abuse acknowledgement on startup": true,
    /*
Google drive marks certain files as "abuse"(e.g. .exe files). In order to download these files, you must
acknowledge the risk. 
If you accept this, pysync will create a "abuse_acknowledged" file in "/data/Internal". You may revoke 
this by deleting the file. 
If you decide not to allow this, you may wish to stop pysync from asking you this on startup every time.

Setting this to false will prevent pysync from asking for permission to download "abuse" files.
*/
    "Print absolute path": false, // Whether or not to print the full absolute path throughout the UI.
    "Max upload threads": 40,
    /*
Maximum number of threads used for uploading at the same time. This is not affected by the number of 
cores/threads available to your computer. 40 appears to be a sweetspot empirically and may be different
on different computers.
*/
    "Max compute threads": -1,
    /*
Maximum number of threads used for calculated md5sum. This is affected by the number of cores/threads
available to your computer. Setting this to -1 will use the number of cores in your cpu.
*/
    "Max retry count": 3, // Number of retries for each commit. This may be 0.
    "Always pull": [
        "~/gdrive/Colab Notebooks"
    ],
    /*
"pull" refers to modifying the local copy to match the remote copy. Use absolute paths of files/folders.
e.g. "/home/hello/gdrive/Colab Notebooks"
*/
    "Always push": [],
    /*
"push" refers to modifying the remote copy to match the local copy. Use absolute paths of files/folders.
e.g. "/home/hello/gdrive/githubProjects"
*/
    "Always ignore": [],
    /*
"Ignore" means that nothing will be done to these paths. Use absolute paths of files/folders.
e.g. "/home/hello/gdrive/LargeImages"
*/
    "Hide forced ignore": false, // Paths ignored due to "Always ignore" will not be displayed
    "Default pull": [
        "remote_new"
    ],
    "Default push": [
        "local_new",
        "content_change"
    ],
    "Default ignore": [],
    /*
There are 3 types of changes:
    remote_new - Files/folders only found on the remote google drive
        (A remote file was created OR a local file was deleted)
    local_new - Files/folders  only found in the local folder
        (A local file was created OR a remote file was deleted)
    content_change - File that has been modified. This does not consider modification date since it's
        unreliable. Which copy to keep is the decision of the user.
When these differences are detected, pysync will propose changes based on these settings.
e.g. putting "local_new" in "Default push" means that pysync will suggest uploading the local copy
e.g. putting "remote_new" in "Default pull" means that pysync will suggest downloading the remote copy
e.g. putting "content_change" in "Default push" means that pysync will suggest uploading the changes

*/
    "Get remote cache interval": 600
    /*
This setting concerns the Watcher process only(running "python3 pysync watcher")
The watcher process is intended to be ran in the background and will periodically fetch the remote metadata
and write it to a file.
*/
}